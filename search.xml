<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【链表面试题】合并两个有序链表, 合并后依然有序]]></title>
    <url>%2F2018%2F11%2F07%2F%E3%80%90%E9%93%BE%E8%A1%A8%E9%9D%A2%E8%AF%95%E9%A2%98%E3%80%91%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8-%E5%90%88%E5%B9%B6%E5%90%8E%E4%BE%9D%E7%84%B6%E6%9C%89%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374// 合并两个有序链表 SListNode * MergeOrderedList(SListNode *p1First, SListNode *p2First)&#123; SListNode*cur1 = p1First; SListNode*cur2 = p2First; SListNode*result = NULL;//结果链表 SListNode*tail = NULL;//结果链表中的最后一个结点，方便尾插 SListNode*next;//保存遍历过程中的下一个结点 while (cur1 != NULL &amp;&amp; cur2 != NULL) &#123; if (cur1-&gt;data &lt;= cur2-&gt;data) &#123; //应该取链表1的结点 if (result != NULL) &#123; //结果链表不为空，直接在最后一个结点上做插入 //保存链表1的下一个结点，让循环继续 next = cur1-&gt;Next; //插入过程 tail-&gt;Next = cur1; cur1-&gt;Next = NULL; //保存新的最后一个结点 tail = cur1; cur1 = next; &#125; else &#123; //保存链表1的下一个结点，让循环继续 next = cur1-&gt;Next; result = cur1; cur1-&gt;Next = NULL; //保存新的最后一个结点 tail = cur1; cur1 = next; &#125; &#125; else &#123; //应该取链表2的结点 if (result != NULL) &#123; //结果链表不为空，直接在最后一个结点上做插入 //保存链表2的下一个结点，让循环继续 next = cur2-&gt;Next; //插入过程 tail-&gt;Next = cur2; cur2-&gt;Next = NULL; //保存新的最后一个结点 tail = cur2; cur2 = next; &#125; else &#123; //保存链表1的下一个结点，让循环继续 next = cur2-&gt;Next; result = cur2; cur2-&gt;Next = NULL; //保存新的最后一个结点 tail = cur2; cur2 = next; &#125; &#125; &#125; //一个链表为空了 if (cur1 == NULL) &#123; tail-&gt;Next = cur2; &#125; if (cur2 == NULL) &#123; tail-&gt;Next = cur1; &#125; return result;&#125; 测试用例12345678910111213141516void TestMerge()&#123; SListNode*List1 = NULL, *List2 = NULL; SListPushBack(&amp;List1, 1); SListPushBack(&amp;List1, 1); SListPushBack(&amp;List1, 3); SListPushBack(&amp;List1, 4); SListPushBack(&amp;List1, 6); SListPushBack(&amp;List2, 1); SListPushBack(&amp;List2, 2); SListPushBack(&amp;List2, 3); SListNode*result = MergeOrderedList(List1, List2); SListPrint(result);&#125; 结果]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F11%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
